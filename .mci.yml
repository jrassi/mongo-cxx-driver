#######################################
#      CXX Driver Config for MCI      #
#######################################

#######################################
#            Variables                #
#######################################
variables:

    mongodb_version:
        version_latest: &version_latest latest
        version_32: &version_32 3.2

    ## Use newer compiler path variables
    compiler_path:
        rhel55_cc_path: &rhel55_cc_path /opt/mongodbtoolchain/v2/bin/gcc
        rhel55_cxx_path: &rhel55_cxx_path /opt/mongodbtoolchain/v2/bin/g++

    ## cmake path variables
    cmake_path:
        linux_cmake_path: &linux_cmake_path /opt/cmake/bin/cmake
        ubuntu_zap_cmake_path: &ubuntu_zap_cmake_path /usr/bin/cmake
        osx_cmake_path: &osx_cmake_path /Applications/Cmake.app/Contents/bin/cmake
        windows_cmake_path: &windows_cmake_path /cygdrive/c/cmake/bin/cmake

    ## tar options variables
    tar_options:
        linux_tar_options: &linux_tar_options --wildcards --no-anchored

    build_tool_path:
        unix_build_tool_path: &unix_build_tool_path make
        windows_build_tool_path: &windows_build_tool_path "/cygdrive/c/Program Files (x86)/MSBuild/14.0/Bin/MSBuild.exe"

    ## cdriver configure flags
    cdriver_configure_flags:
        linux_cdriver_configure_flags: &linux_cdriver_configure_flags --enable-ssl --enable-sasl --with-gnu-ld CFLAGS=-fno-omit-frame-pointer
        osx_cdriver_configure_flags: &osx_cdriver_configure_flags --enable-ssl --enable-sasl

    ## cmake flag variables
    cmake_flags:
        linux_cmake_flags: &linux_cmake_flags -DCMAKE_C_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror -Wno-error=missing-field-initializers"
        rhel55_cmake_flags: &rhel55_cmake_flags -DCMAKE_C_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers" -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror"
        osx_cmake_flags: &osx_cmake_flags -DCMAKE_C_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers" -DCMAKE_CXX_FLAGS="-stdlib=libc++ -Wall -Wextra -Werror" -DBSONCXX_POLY_USE_BOOST=ON
        asan_cmake_flags: &asan_cmake_flags -DCMAKE_C_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers" -DCMAKE_CXX_COMPILER="/usr/bin/clang++" -DCMAKE_CXX_FLAGS="-D_GLIBCXX_USE_CXX11_ABI=0 -fsanitize=address -O1 -g -fno-omit-frame-pointer -Wall -Wextra -Werror"
        ubsan_cmake_flags: &ubsan_cmake_flags -DCMAKE_C_FLAGS="-Wall -Wextra -Wno-attributes -Werror -Wno-error=missing-field-initializers" -DCMAKE_CXX_COMPILER="/usr/bin/clang++" -DCMAKE_CXX_FLAGS="-D_GLIBCXX_USE_CXX11_ABI=0 -fsanitize=undefined -fsanitize-blacklist=$(pwd)/etc/ubsan.blacklist -fno-sanitize-recover=undefined -O1 -g -fno-omit-frame-pointer -Wall -Wextra -Werror"
        windows_cmake_flags: &windows_cmake_flags -G "Visual Studio 14 2015 Win64" -DBOOST_ROOT=c:/local/boost_1_60_0 -DLIBBSON_DIR=$(cygpath -m "$(pwd)/../mongoc") -DLIBMONGOC_DIR=$(cygpath -m "$(pwd)/../mongoc")

    ## test parameters
    test_params:
        asan_test_params: &asan_test_params PATH="/usr/lib/llvm-3.8/bin" ASAN_OPTIONS="detect_leaks=1"
        ubsan_test_params: &ubsan_test_params PATH="usr/lib/llvm-3.8/bin" UBSAN_OPTIONS="print_stacktrace=1"
        valgrind_test_params: &valgrind_test_params valgrind --leak-check=full --track-origins=yes --num-callers=50 --error-exitcode=1 --error-limit=no --read-var-info=yes --suppressions=../etc/memcheck.suppressions


#######################################
#            Functions                #
#######################################

functions:
    "getdata":
        command: shell.exec
        params:
            working_dir: "."
            script: |
               set -o xtrace
               cc --version || true
               c++ --version || true
               gcc --version || true
               g++ --version || true
               clang --version || true
               cmake --version || true
               find /opt -name gcc -exec {} --version\;

    "fetch_source":
        command: git.get_project
        params:
            directory: "mongo-cxx-driver"

    "start_mongod":
        command: shell.exec
        params:
            working_dir: "."
            script: |
                set -o errexit
                set -o xtrace
                git clone git@github.com:jrassi/drivers-evergreen-tools.git
                cd drivers-evergreen-tools
                export DRIVERS_TOOLS=$(pwd)
                if [ "Windows_NT" == "$OS" ]; then
                    export DRIVERS_TOOLS=$(cygpath -m $DRIVERS_TOOLS)
                fi
                export MONGODB_BINARIES=$DRIVERS_TOOLS/mongodb/bin
                export MONGO_ORCHESTRATION_HOME=$DRIVERS_TOOLS/.evergreen/orchestration
                export MONGODB_VERSION=${mongodb_version}
                echo "{ \"releases\": { \"default\": \"$MONGODB_BINARIES\" }}" > $MONGO_ORCHESTRATION_HOME/orchestration.config
                sh .evergreen/run-orchestration.sh

    "stop_mongod":
        command: shell.exec
        params:
            working_dir: "."
            script: |
                set -o errexit
                set -o xtrace
                cd drivers-evergreen-tools/.evergreen/orchestration
                if [ -f venv/bin/activate ]; then
                    . venv/bin/activate
                elif [ -f venv/Scripts/activate ]; then
                    . venv/Scripts/activate
                fi
                mongo-orchestration stop

    "install_c_driver":
        command: shell.exec
        params:
            working_dir: "mongo-cxx-driver"
            script: |
                    export PREFIX=$(pwd)/../mongoc/
                    sh .evergreen/install.sh libbson ${MONGOC_VERSION|master}
                    sh .evergreen/install.sh mongoc ${MONGOC_VERSION|master}

    "lint":
        - command: shell.exec
          params:
              working_dir: "mongo-cxx-driver"
              script: |
                  set -o errexit
                  set -o xtrace
                  python etc/clang_format.py lint

    "compile":
        - command: shell.exec
          params:
              working_dir: "mongo-cxx-driver"
              script: |
                  set -o errexit
                  set -o xtrace
                  if [ "${cxx_path|default}" != "default" ]; then
                        export CXX="${cxx_path}"
                  fi
                  if [ "${cc_path|default}" != "default" ]; then
                        export CC="${cc_path}"
                  fi
                  export PATH_TO_CMAKE="${cmake_path}"
                  export PATH_TO_BUILD_TOOL="${build_tool_path}"
                  export PKG_CONFIG_PATH="$(pwd)/../mongoc/lib/pkgconfig"
                  sh .evergreen/compile.sh ${cmake_flags} -DCMAKE_BUILD_TYPE=${build_type} -DCMAKE_INSTALL_PREFIX=install ..

    "test":
        - command: shell.exec
          params:
              working_dir: "mongo-cxx-driver"
              script: |
                  set -o errexit
                  set -o xtrace
                  cd build
                  export PREFIX=$(pwd)/../../mongoc
                  export PATH=$PREFIX/bin:$(pwd)/install/bin:$PATH
                  export LD_LIBRARY_PATH=.:$PREFIX/lib/
                  export DYLD_LIBRARY_PATH=.:$PREFIX/lib/
                  ${test_params} ./src/bsoncxx/test/test_bson
                  ${test_params} ./src/mongocxx/test/test_driver
                  CRUD_TESTS_PATH="$(pwd)/../data/crud" ${test_params} ./src/mongocxx/test/test_specs
                  ${test_params} ./src/mongocxx/test/test_instance

                  # The break -1 is a hack to cause us to have a bad
                  # exit status if any test exits with a bad exit
                  # status.
                  for test in $(find examples -type f -perm /u+x | sort) ; do ${test_params} $test || break -1 ; done
#######################################
#              Pre Task               #
#######################################

pre:
  - command: shell.exec
    params:
      script: |
        rm -rf "mongo-cxx-driver"
        rm -fr "mongo-c-driver"
        rm -fr mongod
  - func: "fetch_source"
  - func: "getdata"

post:
  - func: "stop_mongod"
#######################################
#               Tasks                 #
#######################################

tasks:
    - name: lint
      commands:
        - func: "lint"

    - name: compile_and_test_with_mongoc_current
      commands:
        - func: "start_mongod"
        - func: "install_c_driver"
          vars:
              MONGOC_VERSION: 1.5.0
        - func: "compile"
        - func: "test"

    - name: compile_and_test_with_mongoc_master
      commands:
        - func: "start_mongod"
        - func: "install_c_driver"
          vars:
              MONGOC_VERSION: master
        - func: "compile"
        - func: "test"

#######################################
#           Buildvariants             #
#######################################

buildvariants:

    #######################################
    #         Linux Buildvariants         #
    #######################################
    - name: ubuntu1404-release
      display_name: "Ubuntu 14.04 Release"
      expansions:
          build_type: "Release"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *linux_cmake_path
          cmake_flags: *linux_cmake_flags
          mongodb_version: *version_latest
      run_on:
          - ubuntu1404-test
      tasks:
          - name: lint
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: ubuntu1404-debug
      display_name: "Ubuntu 14.04 Debug"
      expansions:
          build_type: "Debug"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *linux_cmake_path
          cmake_flags: *linux_cmake_flags
          mongodb_version: *version_latest
      run_on:
          - ubuntu1404-test
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: rhel55-debug
      display_name: "RHEL 5.5 Debug"
      expansions:
          build_type: "Debug"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *linux_cmake_path
          cmake_flags: *rhel55_cmake_flags
          cc_path: *rhel55_cc_path
          cxx_path: *rhel55_cxx_path
          # Versions 3.4+ of the server no longer run RHEL 5.5, so we pin to 3.2 instead.
          mongodb_version: *version_32
      run_on:
          - rhel55-test
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: osx-1010
      display_name: "OS X 10.10 Release"
      expansions:
          build_type: "Release"
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *osx_cdriver_configure_flags
          cmake_path: *osx_cmake_path
          cmake_flags: *osx_cmake_flags
          mongodb_version: *version_latest
      run_on:
          - osx-1010
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: ubuntu1604-debug-valgrind
      display_name: "Valgrind Ubuntu 16.04 Debug"
      expansions:
          build_type: "Debug"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *linux_cmake_path
          cmake_flags: *linux_cmake_flags
          test_params: *valgrind_test_params
          mongodb_version: *version_latest
      run_on:
          - ubuntu1604-build
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: ubuntu1604-debug-asan
      display_name: "ASAN Ubuntu 16.04 Debug"
      expansions:
          build_type: "Debug"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *linux_cmake_path
          cmake_flags: *asan_cmake_flags
          test_params: *asan_test_params
          mongodb_version: *version_latest
      run_on:
          - ubuntu1604-build
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: ubuntu1604-debug-ubsan
      display_name: "UBSAN Ubuntu 16.04 Debug"
      expansions:
          build_type: "Debug"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *linux_cmake_path
          cmake_flags: *ubsan_cmake_flags
          test_params: *ubsan_test_params
          mongodb_version: *version_latest
      run_on:
          - ubuntu1604-build
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: ubuntu1604-zseries
      display_name: "s390x Ubuntu 16.04"
      batchtime: 1440 # 1 day
      expansions:
          build_type: "Release"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *ubuntu_zap_cmake_path
          mongodb_version: *version_latest
      run_on:
          - ubuntu1604-zseries-small
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: power8-ubuntu1604
      display_name: "ppc64le Ubuntu 16.04"
      batchtime: 1440 # 1 day
      expansions:
          build_type: "Release"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *ubuntu_zap_cmake_path
          mongodb_version: *version_latest
      run_on:
          - ubuntu1604-power8-build
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: arm-ubuntu1604
      display_name: "arm64 Ubuntu 16.04"
      batchtime: 1440 # 1 day
      expansions:
          build_type: "Release"
          tar_options: *linux_tar_options
          build_tool_path: *unix_build_tool_path
          cdriver_configure_flags: *linux_cdriver_configure_flags
          cmake_path: *ubuntu_zap_cmake_path
          mongodb_version: *version_latest
      run_on:
          - ubuntu1604-arm64-small
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master

    - name: windows-2k8-debug
      display_name: "Windows 2008R2 Debug"
      batchtime: 1440 # 1 day
      expansions:
          build_type: "Debug"
          tar_options: *linux_tar_options
          build_tool_path: *windows_build_tool_path
          cmake_path: *windows_cmake_path
          cmake_flags: *windows_cmake_flags
          mongodb_version: *version_latest
      run_on:
          - windows-64-vs2015-compile
      tasks:
          - name: compile_and_test_with_mongoc_current
          - name: compile_and_test_with_mongoc_master
